/* 1 Defina a query NoSQL para exibir todos os documentos da collection
restaurantes. */
use('DadosRestaurantes')
db.restaurantes.find({},{});

/* 2. Defina a query NoSQL para exibir os campos restaurante_id, nome,
bairro e cozinha de todos os documentos da collection restaurantes. */
use('DadosRestaurantes')
db.restaurantes.find({},{restaurante_id:1, nome:1, bairro: 1, cozinha: 1})

/* 3. Defina a query NoSQL para exibir os campos restaurante_id, nome,
bairro e cozinha, porém, excluindo o campo _id de todos os documentos
da collection restaurantes. */
use('DadosRestaurantes')
db.restaurantes.find({},{_id:0, restaurante_id:1, nome:1, bairro: 1, cozinha: 1});

/* 4. Defina a query NoSQL para exibir os campos restaurante_id, nome,
bairro e cep, porém, excluindo o campo _id de todos os documentos da
collection restaurantes. */
use('DadosRestaurantes')
db.restaurantes.find({},{_id:0, restaurante_id:1, nome:1, bairro: 1, cozinha: 1, endereço: {cep: 1}});

/* 5. Defina a query NoSQL para exibir todos os restaurantes que estão
localizados no bairro Bronx. */
use('DadosRestaurantes')
db.restaurantes.find({bairro:{$eq: /Bronx/i}},{});

/* 6. Defina a query NoSQL para exibir os 5 primeiros restaurantes que
estão localizados no bairro Bronx. */
use('DadosRestaurantes')
db.restaurantes.find({bairro:{$eq: /Bronx/i}},{})
.limit(5);

/* 7.Defina a query NoSQL para exibir os próximos 5 restaurantes após
“pular” os 5 primeiros que estão localizados no bairro Bronx. */
use('DadosRestaurantes')
db.restaurantes.find({bairro:{$eq: /Bronx/i}},{})
.skip(5)
.limit(5);

/* 8. Defina a query NoSQL para exibir todos os restaurantes que obtiveram
uma avaliação maior que 90 pontos.*/
use('DadosRestaurantes')
db.restaurantes.find({'avaliações.pontos' : {$gt: 90}},{})

//Outra resolução
use('DadosRestaurantes')
db.restaurantes.find({avaliações:
                        {$elemMatch:
                            {'pontos':
                            {$gt: 90}}
                        }
                     },{_id:1, nome:1, 'avaliações.$':1})

/* 9. Defina a query NoSQL para exibir todos os restaurantes que obtiveram
uma avaliação maior que 80 e menor que 100. */
use('DadosRestaurantes')
db.restaurantes.find({$and:[
    {'avaliações.pontos': {$lt: 100}},
    {'avaliações.pontos': {$gt: 80}}
    ]},{})

//Outra resolução
use('DadosRestaurantes')
db.restaurantes.find({avaliações:
                        {$elemMatch:
                            {'pontos':
                            {$gt: 80, $lt: 100 }}
                        }
                     },{_id:1, nome:1, 'avaliações.$':1})

/* 10. Defina a query NoSQL para exibir todos os restaurantes que estão
localizados em uma latitude menor que -95.754168.*/
use('DadosRestaurantes')
db.restaurantes.find({'endereço.coord.0': {$lt: -95.754168 } },{})

/*11. Defina a query NoSQL para exibir todos os restaurantes que não são
da cozinha 'American', que tenham pelo menos 70 pontos de avaliação e
que a latitude seja menor que -65.754168. (utilize o operador $and)*/
use('DadosRestaurantes')
db.restaurantes.find({$and:[
    {'avaliações.pontos': {$gte: 70}},
    {'cozinha': {$ne: 'American '}},
    {'endereço.coord.0': {$lt: -65.754168}}
    ]},{_id:0,'endereço.coord':1, cozinha:1})

//Outra resolução
use('DadosRestaurantes')
db.restaurantes.find({$and:[
    {'avaliações.pontos': {$gte: 70}},
    {'cozinha': {$nin:['American', 'American ']}},
    {'endereço.coord.0': {$lt: -65.754168}}
    ]},{_id:0,'endereço.coord':1, cozinha:1})

//Outra resolução
use('DadosRestaurantes')
db.restaurantes.find({$and:[
    {'avaliações.pontos': {$gte: 70}},
    {'cozinha': {$not: /american/i}},
    {'endereço.coord.0': {$lt: -65.754168}}
    ]},{_id:0,'endereço.coord':1, cozinha:1})

/* 12. Defina a query NoSQL para exibir todos os restaurantes que não são
da cozinha 'American', que tenham pelo menos 70 pontos de avaliação e
que a latitude seja menor que -65.754168. (Não utilize o operador $and
para esta query)*/
use('DadosRestaurantes')
db.restaurantes.find({
    'avaliações.pontos': {$gte: 70},
    'cozinha': {$not: /american/i},
    'endereço.coord.0': {$lt: -65.754168}}
    ,{_id:0,'endereço.coord':1, cozinha:1})

/*13. Defina a query NoSQL para exibir todos os restaurantes que não são
da cozinha 'American', e obtiveram uma nota 'A' na avaliação e que não
pertencem ao bairro Brooklyn. Exibir a consulta ordenada por cozinha em
ordem descendente.*/
use('DadosRestaurantes')
db.restaurantes.find({$and:[
    {'avaliações.nota': {$eq: 'A'}},
    {'cozinha': {$not: /american/i}},
    {'bairro': {$ne: 'Brooklyn'}}
    ]},{_id:0,'bairro':1, cozinha:1, 'avaliações.nota':1})

/*14. Defina a query NoSQL para exibir o Id, nome, bairro e cozinha dos
restaurantes cujo nome comecem com o texto Wil. Dica: /^ / */
use('DadosRestaurantes')
db.restaurantes.find({nome:/^Wil/i},{_id:0, nome:1})

/*15. Defina a query NoSQL para exibir o Id, nome, bairro e cozinha dos
restaurantes cujo nome terminem com o texto ces. Dica : / $/*/
use('DadosRestaurantes')
db.restaurantes.find({nome: /ces$/i},{_id:0,nome:1,bairro:1, cozinha:1})

/*16. Defina a query NoSQL para exibir o Id, nome, bairro e cozinha dos
restaurantes cujo nome contém o texto 'Reg' em alguma parte do nome.
Dica : / /*/
use('DadosRestaurantes')
db.restaurantes.find({nome: /Reg/i},{_id:0,nome:1,bairro:1, cozinha:1})

/*17. Defina a query NoSQL para exibir os restaurantes que estão no bairro
Bronx e preparam a cozinha American ou Chinese. (utilize o operador $or)*/
use('DadosRestaurantes')
db.restaurantes.find({bairro: {$eq: "Bronx"},
                    $or:[
                        {cozinha: 'American '},
                        {cozinha: 'Chinese'}
                    ]},
                    {_id:0,nome:1,bairro:1, cozinha:1})

/*18. Defina a query NoSQL para exibir o Id, nome, bairro e cozinha de
todos os restaurantes que estão em um dos seguintes bairros: Staten
Island, Queens, Bronx ou Brooklyn. (utilize o operador $in)*/
use('DadosRestaurantes')
db.restaurantes.find({bairro: {$in: ['Staten Island', 'Queens', 'Bronx', 'Brooklyn']}},
                    {_id:0, bairro:1})

/*19. Defina a query NoSQL para exibir o Id, nome, bairro e cozinha de
todos os restaurantes que não estão em um dos seguintes bairros: Staten
Island, Queens, Bronx ou Brooklyn. (utilize o operador $nin)*/
use('DadosRestaurantes')
db.restaurantes.find({bairro: {$nin: ['Staten Island', 'Queens', 'Bronx', 'Brooklyn']}},
                    {_id:0, bairro:1})

/*20. Defina a query NoSQL para exibir o Id, nome, bairro e cozinha de
todos os restaurantes que não conseguiram obter pontos na avaliação
maior que 10*/
use('DadosRestaurantes')
db.restaurantes.find({'avaliações.pontos': {$not: {$gt: 10}}},
                    {_id:0, nome:1, bairro:1}).count()

use('DadosRestaurantes')
db.restaurantes.find({'avaliações.pontos': {$lt: 10}},
                    {_id:0, nome:1, bairro:1}).count()